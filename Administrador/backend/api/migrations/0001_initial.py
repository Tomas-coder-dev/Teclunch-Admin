# Generated by Django 5.1.3 on 2024-12-08 21:32

import api.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha', models.DateField(unique=True)),
                ('disponible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdminUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_institucional', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('nombre', models.CharField(max_length=100)),
                ('correo', models.EmailField(max_length=254, unique=True, validators=[api.models.validate_admin_email])),
                ('role', models.CharField(choices=[('administrador', 'Administrador'), ('estudiante', 'Estudiante')], default='administrador', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=6)),
                ('disponible', models.BooleanField(default=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='items/')),
                ('ingredientes', models.TextField(blank=True, null=True)),
                ('calorias', models.IntegerField(blank=True, null=True)),
                ('proteinas', models.FloatField(blank=True, null=True)),
                ('grasas', models.FloatField(blank=True, null=True)),
                ('carbohidratos', models.FloatField(blank=True, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='CartaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carta_items', to='api.carta')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_in_cartas', to='api.item')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pedido', models.DateField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('Reservado', 'Reservado'), ('Pagado', 'Pagado'), ('Entregado', 'Entregado'), ('Cancelado', 'Cancelado')], default='Reservado', max_length=10)),
                ('codigo_pedido', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('carta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.carta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='id_institucional')),
            ],
        ),
        migrations.CreateModel(
            name='PedidoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_en_pedido', to='api.item')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedido_item_relations', to='api.pedido')),
            ],
        ),
        migrations.AddField(
            model_name='pedido',
            name='pedido_items',
            field=models.ManyToManyField(related_name='pedidos', through='api.PedidoItem', to='api.item'),
        ),
        migrations.CreateModel(
            name='Retroalimentacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField(blank=True)),
                ('calificacion', models.IntegerField()),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.item')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='id_institucional')),
            ],
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metodo_pago', models.CharField(choices=[('Banca Movil', 'Banca Movil'), ('Tarjeta', 'Tarjeta'), ('Efectivo', 'Efectivo')], max_length=20)),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Completado', 'Completado'), ('Fallido', 'Fallido')], max_length=15)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user_id_institucional', models.CharField(blank=True, max_length=6, null=True)),
                ('user_nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('pedido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transacciones', to='api.pedido')),
                ('realizador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacciones_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
